(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString(),(new Date).toISOString();const t="/api/customers";async function n(n=1,o=20,a=""){var e,r;const i=new URLSearchParams({page:n.toString(),limit:o.toString(),search:a}),s=`${t}?${i}`;try{const t=await fetch(s);if(!t.ok){await t.text();throw new Error(`고객 목록을 불러오는데 실패했습니다 (${t.status})`)}const a=await t.json();return{success:a.success,data:a.data||[],total:a.total||(null==(e=a.data)?void 0:e.length)||0,page:n,totalPages:Math.ceil((a.total||(null==(r=a.data)?void 0:r.length)||0)/o)}}catch(c){throw c}}async function o(n){const o=`${t}?id=${n}`,a=await fetch(o);if(!a.ok)throw new Error("고객 정보를 불러오는데 실패했습니다");return a.json()}async function a(n){const o=t,a=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!a.ok){const t=await a.json();throw new Error(t.error||"고객 등록에 실패했습니다")}return a.json()}async function e(n,o){const a=`${t}?id=${n}`,e=await fetch(a,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok){const t=await e.json();throw new Error(t.error||"고객 정보 수정에 실패했습니다")}return e.json()}async function r(n){const o=`${t}?id=${n}`,a=await fetch(o,{method:"DELETE"});if(!a.ok){const t=await a.json();throw new Error(t.error||"고객 삭제에 실패했습니다")}return a.json()}export{n as a,a as c,r as d,o as g,e as u};
